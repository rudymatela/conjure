-- strategy: unique candidates
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 3 candidates of size 2
-- 7 candidates of size 3
-- 8 candidates of size 4
-- 23 candidates of size 5
-- 30 candidates of size 6
-- 82 candidates of size 7
-- tested 84 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: default
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 3 candidates of size 2
-- 7 candidates of size 3
-- 8 candidates of size 4
-- 28 candidates of size 5
-- 35 candidates of size 6
-- 167 candidates of size 7
-- tested 95 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: without reasoning
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 3 candidates of size 2
-- 16 candidates of size 3
-- 17 candidates of size 4
-- 279 candidates of size 5
-- 313 candidates of size 6
-- 5763 candidates of size 7
-- tested 656 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: without descent
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 3 candidates of size 2
-- 7 candidates of size 3
-- 8 candidates of size 4
-- 28 candidates of size 5
-- 35 candidates of size 6
-- 252 candidates of size 7
-- tested 148 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: without ad-hoc
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 6 candidates of size 2
-- 12 candidates of size 3
-- 24 candidates of size 4
-- 37 candidates of size 5
-- 72 candidates of size 6
-- 196 candidates of size 7
-- tested 165 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: only reasoning
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 6 candidates of size 2
-- 12 candidates of size 3
-- 24 candidates of size 4
-- 47 candidates of size 5
-- 82 candidates of size 6
-- 342 candidates of size 7
-- tested 284 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: only descent
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 6 candidates of size 2
-- 21 candidates of size 3
-- 42 candidates of size 4
-- 302 candidates of size 5
-- 602 candidates of size 6
-- 6115 candidates of size 7
-- tested 1001 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: only ad-hoc
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 3 candidates of size 2
-- 16 candidates of size 3
-- 17 candidates of size 4
-- 279 candidates of size 5
-- 313 candidates of size 6
-- 6281 candidates of size 7
-- tested 1004 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

-- strategy: only typed
factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- 3 candidates of size 1
-- 6 candidates of size 2
-- 21 candidates of size 3
-- 42 candidates of size 4
-- 330 candidates of size 5
-- 630 candidates of size 6
-- 7215 candidates of size 7
-- tested 1945 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

